function setup(){return{emptySquares:squareTaken(),setsOfThree:[[1,2,3],[1,5,9],[1,4,7],[2,5,8],[3,6,9],[3,5,7],[4,5,6],[7,8,9]],turn:turnOrder(),gameOver:!1}}function turnOrder(){var a=0;return{increment:function(){a+=1},checkTurn:function(){return a}}}function squareTaken(){var a=[1,2,3,4,5,6,7,8,9];return{checkSquare:function(b){console.log("this is what the function thinks emptySquares are: ",a);var c=a.indexOf(b);return c>-1?(a.splice(c,1),!0):!1},checkEmpty:function(){return a}}}function chooseSquare(a){$(".square").click(function(){var b=parseInt($(this).attr("id"));if(a(b)&&!tic.gameOver&&tic.turn.checkTurn()%2===0){var c=_.template($("#x").text());$(this).append(c()),tic.turn.increment(),checkForThree(tic.setsOfThree,0,0,"x")?tic.gameOver=!0:aiRandom()}})}function aiRandom(){var a=tic.emptySquares.checkEmpty().slice(),b=Math.floor(Math.random()*a.length),c=a[b];appendPiece("#"+c,determineTemplate("o")),tic.emptySquares.checkSquare(c),tic.turn.increment(),checkForThree(tic.setsOfThree,0,0,"o")&&(tic.gameOver=!0)}function checkForThree(a,b,c,d){if(3===c)return console.log("MATCH"),!0;if(b>=a.length)return console.log("NO GOOD"),!1;var e=a[b][c];return $("#"+e).children().hasClass(d)?(console.log("match",b,c),checkForThree(a,b,c+1,d)):checkForThree(a,b+1,0,d)}function verifyAllThrees(a){var b=runEachSet(tic.setsOfThree,displaySet);setInterval(function(){b(a),checkForThree(tic.setsOfThree,0,0,a)},1500)}function runEachSet(a,b){var c=0;return function(d){c=c<a.length?c:0,clearSquares(),b(a[c],d),c++}}function displaySet(a,b){a.forEach(function(a){var c="#"+a,d=determineTemplate(b);appendPiece(c,d)})}function determineTemplate(a){return _.template("x"===a?$("#x").text():$("#o").text())}function appendPiece(a,b){$(a).append(b)}function clearSquares(){var a=$(".square");a.each(function(){$(this).html("")})}var tic=setup();$(function(){chooseSquare(tic.emptySquares.checkSquare)});